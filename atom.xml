<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nate Personal Blog</title>
  
  
  <link href="https://github.com/eagle230/nate.github.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/eagle230/nate.github.io/"/>
  <updated>2020-12-28T11:56:23.140Z</updated>
  <id>https://github.com/eagle230/nate.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DMA + IDLE中断实现接收不定长数据</title>
    <link href="https://github.com/eagle230/nate.github.io/2020/12/28/STM32%20IDLE%20+%20DMA/"/>
    <id>https://github.com/eagle230/nate.github.io/2020/12/28/STM32%20IDLE%20+%20DMA/</id>
    <published>2020-12-28T11:49:41.910Z</published>
    <updated>2020-12-28T11:56:23.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DMA-IDLE中断实现接收不定长数据"><a href="#DMA-IDLE中断实现接收不定长数据" class="headerlink" title="DMA + IDLE中断实现接收不定长数据"></a>DMA + IDLE中断实现接收不定长数据</h1><h2 id="一、实现原理"><a href="#一、实现原理" class="headerlink" title="一、实现原理"></a>一、实现原理</h2><p>将串口使能空闲中断并且开启DMA接收（会定义一个数组，这个数组的长度是接收不定长的最大长度），这时候如果当串口产生了中断，判断是否是空闲中断，如果是空闲中断就将计算DMA接收了多少个字节，然后将数据进行处理。一帧接收完成。</p><h2 id="二、实现步骤"><a href="#二、实现步骤" class="headerlink" title="二、实现步骤"></a>二、实现步骤</h2><p>步骤1.初始化串口，使能空闲中断。<br>步骤2.初始化串口的DMA接收，并且开启DMA。<br>步骤3.编写UART中断服务函数。</p><h2 id="三、相关代码"><a href="#三、相关代码" class="headerlink" title="三、相关代码"></a>三、相关代码</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief USART2 Initialization Function</span></span><br><span class="line"><span class="comment">  * @param None</span></span><br><span class="line"><span class="comment">  * @retval None</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">MX_USART2_UART_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN USART2_Init 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END USART2_Init 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE BEGIN USART2_Init 1 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END USART2_Init 1 */</span></span><br><span class="line">  huart2.Instance = USART2;</span><br><span class="line">  huart2.Init.BaudRate = <span class="number">19200</span>;</span><br><span class="line">  huart2.Init.WordLength = UART_WORDLENGTH_8B;</span><br><span class="line">  huart2.Init.StopBits = UART_STOPBITS_1;</span><br><span class="line">  huart2.Init.Parity = UART_PARITY_NONE;</span><br><span class="line">  huart2.Init.Mode = UART_MODE_TX_RX;</span><br><span class="line">  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;</span><br><span class="line">  huart2.Init.OverSampling = UART_OVERSAMPLING_16;</span><br><span class="line">  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;</span><br><span class="line">  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;</span><br><span class="line">  <span class="keyword">if</span> (HAL_UART_Init(&amp;huart2) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN USART2_Init 2 */</span></span><br><span class="line">  HAL_UART_Receive_DMA(&amp;huart2,&amp;RxBuff[<span class="number">0</span>],RX_BUFFER_LEN); <span class="comment">/*启动DMA接收，如果不初始化第一帧会丢掉*/</span></span><br><span class="line">  __HAL_UART_ENABLE_IT(&amp;huart2,UART_IT_IDLE); <span class="comment">/*使能空闲中断*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END USART2_Init 2 */</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="中断服务函数增加自己的处理函数"><a href="#中断服务函数增加自己的处理函数" class="headerlink" title="中断服务函数增加自己的处理函数"></a>中断服务函数增加自己的处理函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief This function handles USART2 global interrupt.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">USART2_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN USART2_IRQn 0 */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END USART2_IRQn 0 */</span></span><br><span class="line">  HAL_UART_IRQHandler(&amp;huart2);</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN USART2_IRQn 1 */</span></span><br><span class="line">  UART_IDLE_IRQHandler(&amp;huart2); <span class="comment">/*用户自定义的空闲中断处理函数*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END USART2_IRQn 1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写的接收不定长函数"><a href="#编写的接收不定长函数" class="headerlink" title="编写的接收不定长函数"></a>编写的接收不定长函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">DMA+串口空闲中断接收不定长</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UART_IDLE_IRQHandler</span><span class="params">(UART_HandleTypeDef *huart)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(huart-&gt;Instance == USART2)                                   <span class="comment">//判断是否是串口2</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(RESET != __HAL_UART_GET_FLAG(&amp;huart2, UART_FLAG_IDLE))   <span class="comment">//判断是否是空闲中断</span></span><br><span class="line">        &#123;</span><br><span class="line">            __HAL_UART_CLEAR_IDLEFLAG(&amp;huart2);                     <span class="comment">//清楚空闲中断标志</span></span><br><span class="line">            HAL_UART_DMAStop(&amp;huart2);  </span><br><span class="line">            RxLen = (RX_BUFFER_LEN - __HAL_DMA_GET_COUNTER(&amp;hdma_usart2_rx));</span><br><span class="line">            HAL_UART_Transmit(&amp;huart3,(<span class="keyword">uint8_t</span>*)&amp;RxBuff,RxLen, <span class="number">5000</span>);</span><br><span class="line">            HAL_UART_Receive_DMA(&amp;huart2,&amp;RxBuff[<span class="number">0</span>],RX_BUFFER_LEN);</span><br><span class="line">            RxLen = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重定向printf到uart"><a href="#重定向printf到uart" class="headerlink" title="重定向printf到uart"></a>重定向printf到uart</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">重定向printf</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fputc</span><span class="params">(<span class="keyword">int</span> ch, FILE* stream)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HAL_UART_Transmit(&amp;huart2,(<span class="keyword">uint8_t</span>*)&amp;ch, <span class="number">1</span>, <span class="number">5000</span>);</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DMA-IDLE中断实现接收不定长数据&quot;&gt;&lt;a href=&quot;#DMA-IDLE中断实现接收不定长数据&quot; class=&quot;headerlink&quot; title=&quot;DMA + IDLE中断实现接收不定长数据&quot;&gt;&lt;/a&gt;DMA + IDLE中断实现接收不定长数据&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="C Lib" scheme="https://github.com/eagle230/nate.github.io/categories/C-Lib/"/>
    
    
    <category term="C Lib" scheme="https://github.com/eagle230/nate.github.io/tags/C-Lib/"/>
    
  </entry>
  
  <entry>
    <title>GNRMC定位信息的读取与解析</title>
    <link href="https://github.com/eagle230/nate.github.io/2020/12/28/GNRMC%20Parser/"/>
    <id>https://github.com/eagle230/nate.github.io/2020/12/28/GNRMC%20Parser/</id>
    <published>2020-12-28T11:45:09.531Z</published>
    <updated>2020-12-28T12:05:59.957Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GNRMC定位信息的读取与解析"><a href="#GNRMC定位信息的读取与解析" class="headerlink" title="GNRMC定位信息的读取与解析"></a>GNRMC定位信息的读取与解析</h1><p><strong>格 式：</strong> </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$GPRMC,&lt;<span class="number">1</span>&gt;,&lt;<span class="number">2</span>&gt;,&lt;<span class="number">3</span>&gt;,&lt;<span class="number">4</span>&gt;,&lt;<span class="number">5</span>&gt;,&lt;<span class="number">6</span>&gt;,&lt;<span class="number">7</span>&gt;,&lt;<span class="number">8</span>&gt;,&lt;<span class="number">9</span>&gt;,&lt;<span class="number">10</span>&gt;,&lt;<span class="number">11</span>&gt;,&lt;<span class="number">12</span>&gt;*hh&lt;CR&gt;&lt;LF&gt;</span><br><span class="line">$GPRMC,<span class="number">024813.640</span>,A,<span class="number">3158.4608</span>,N,<span class="number">11848.3737</span>,E,<span class="number">10.05</span>,<span class="number">324.27</span>,<span class="number">150706</span>,,,A*<span class="number">50</span></span><br></pre></td></tr></table></figure><p><strong>说 明：</strong></p><blockquote><p>字段 0：$GPRMC，语句ID，表明该语句为Recommended Minimum Specific GPS/TRANSIT Data（RMC）推荐最小定位信息<br>字段 1：UTC时间，hhmmss.sss格式<br>字段 2：状态，A=定位，V=未定位<br>字段3：纬度ddmm.mmmm，度分格式（前导位数不足则补0）<br>字段 4：纬度N（北纬）或S（南纬）<br>字段 5：经度dddmm.mmmm，度分格式（前导位数不足则补0）<br>字段 6：经度E（东经）或W（西经）<br>字段 7：速度，节，Knots（一节也是1.852千米／小时）<br>字段 8：方位角，度（二维方向指向，相当于二维罗盘）<br>字段 9：UTC日期，DDMMYY格式<br>字段10：磁偏角，（000 - 180）度（前导位数不足则补0）<br>字段11：磁偏角方向，E=东，W=西<br>字段12：模式，A=自动，D=差分，E=估测，N=数据无效（3.0协议内容）<br>字段13：校验值，</p></blockquote><blockquote><p>这里，“ * ”为校验和识别符，其后面的两位数为校验和代表了“$”和“*”之间所有字符（不包括这两个字符）的异或值的十六进制值</p></blockquote><p><strong>结构体定义：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> mounth;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">&#125; data_struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> hour;</span><br><span class="line">    <span class="keyword">int</span> minute;</span><br><span class="line">    <span class="keyword">int</span> second;</span><br><span class="line">    <span class="keyword">int</span> milliSecond;</span><br><span class="line">&#125; time_struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    data_struct utcDate;</span><br><span class="line">    time_struct utcTime;</span><br><span class="line">    <span class="keyword">float</span>  lat;<span class="comment">//纬度</span></span><br><span class="line"><span class="keyword">float</span>  lon;<span class="comment">//经度</span></span><br><span class="line">    <span class="keyword">float</span>  speed;</span><br><span class="line">    <span class="keyword">float</span>  direction;</span><br><span class="line">    <span class="keyword">float</span>  declination;</span><br><span class="line">    <span class="keyword">char</span>    ew;</span><br><span class="line">    <span class="keyword">char</span>    ns;</span><br><span class="line">    <span class="keyword">char</span>    status;</span><br><span class="line">    <span class="keyword">char</span>    declin_ew;</span><br><span class="line">    <span class="keyword">char</span>    mode;</span><br><span class="line">&#125; gps_gprmc_struct;</span><br></pre></td></tr></table></figure><p><strong>GPS输出格式：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*GPS数据如下</span></span><br><span class="line"><span class="comment">$GPGGA,121252.000,3937.3032,N,11611.6046,E,1,05,2.0,45.9,M,-5.7,M,,0000*77 </span></span><br><span class="line"><span class="comment">$GPRMC,121252.000,A,3958.3032,N,11629.6046,E,15.15,359.95,070306,,,A*54 </span></span><br><span class="line"><span class="comment">$GPVTG,359.95,T,,M,15.15,N,28.0,K,A*04 </span></span><br><span class="line"><span class="comment">$GPGGA,121253.000,3937.3090,N,11611.6057,E,1,06,1.2,44.6,M,-5.7,M,,0000*72 </span></span><br><span class="line"><span class="comment">$GPGSA,A,3,14,15,05,22,18,26,,,,,,,2.1,1.2,1.7*3D </span></span><br><span class="line"><span class="comment">$GPGSV,3,1,10,18,84,067,23,09,67,067,27,22,49,312,28,15,47,231,30*70 </span></span><br><span class="line"><span class="comment">$GPGSV,3,2,10,21,32,199,23,14,25,272,24,05,21,140,32,26,14,070,20*7E </span></span><br><span class="line"><span class="comment">$GPGSV,3,3,10,29,07,074,,30,07,163,28*7D</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>经纬度转换公式：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$GPRMC,<span class="number">121252.000</span>,A,<span class="number">3958.3032</span>,N,<span class="number">11629.6046</span>,E,<span class="number">15.15</span>,<span class="number">359.95</span>,<span class="number">070306</span>,,,A*<span class="number">54</span> </span><br><span class="line">lat = <span class="number">3958.3032</span>;ddmm.mmmm  度分格式</span><br><span class="line">lon = <span class="number">11629.6046</span>;dddmm.mmmm 度分格式</span><br><span class="line">度分格式转换成度格式dd.ddddd    <span class="number">1</span>度=<span class="number">60</span>分</span><br><span class="line"><span class="number">3958.3032</span> 取出mm.mmmm 也就是<span class="number">58.3032</span>，转换成度 <span class="number">58.3032</span>/<span class="number">60</span> = <span class="number">0.97172</span> ，最后等于<span class="number">39.97172</span> </span><br><span class="line"><span class="number">11629.6046</span>取出mm.mmmm 也就是<span class="number">29.6046</span>，转换成度 <span class="number">29.6046</span>/<span class="number">60</span> = <span class="number">0.49341</span> ，最后等于<span class="number">116.49341</span></span><br></pre></td></tr></table></figure><p><strong>解析函数：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GPS_Parse</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint16_t</span> grmc_len;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> ret_crc = <span class="number">0</span>,ret_sscanf = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span>* p_grmc;</span><br><span class="line">    NRF_LOG_INFO(<span class="string">&quot;gps.gps_info.BuffIndex:%d\r\n&quot;</span>,gps.gps_info.BuffIndex);</span><br><span class="line"><span class="comment">//NRF_LOG_INFO(&quot;GPS_recv : %s\r\n&quot;,gps.gps_info.UartBuff);</span></span><br><span class="line">    <span class="keyword">if</span> ((p_grmc = <span class="built_in">strstr</span>((<span class="keyword">char</span>*)&amp;gps.gps_info.UartBuff[<span class="number">0</span>], <span class="string">&quot;$GNRMC&quot;</span>)) != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (grmc_len = <span class="number">0</span>; grmc_len&lt;<span class="built_in">strlen</span>(p_grmc); grmc_len++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p_grmc[grmc_len] == <span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p_grmc[grmc_len] = <span class="string">&#x27;\0&#x27;</span>; <span class="comment">//replace ‘/n’ with null</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">        NRF_LOG_INFO(<span class="string">&quot;grmc_len: %d\r\n&quot;</span>,grmc_len);</span><br><span class="line">        NRF_LOG_INFO(<span class="string">&quot;GPS_Parse : %s\r\n&quot;</span>,p_grmc);</span><br><span class="line">        ret_crc = GpsFrameCheck(p_grmc,grmc_len);<span class="comment">///帧校验</span></span><br><span class="line">        <span class="keyword">if</span>(ret_crc == <span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memset</span>(&amp;gps.gprmc, <span class="number">0</span>, <span class="keyword">sizeof</span>(gps_gprmc_struct));</span><br><span class="line">            ret_sscanf = <span class="built_in">sscanf</span> (p_grmc, <span class="string">&quot;$GNRMC,%2d%2d%2d.%3d,%c,%f,%c,%f,%c,%f,%f,%2d%2d%2d,%f,%c,%c*&quot;</span>, \</span><br><span class="line">                            &amp; gps.gprmc.utcTime.hour, &amp; gps.gprmc.utcTime.minute, &amp; gps.gprmc.utcTime.second, &amp; gps.gprmc.utcTime.milliSecond, \</span><br><span class="line">                            &amp; gps.gprmc.status, &amp; gps.gprmc.lat, &amp; gps.gprmc.ns, &amp; gps.gprmc.lon, &amp; gps.gprmc.ew, &amp; gps.gprmc.speed, &amp; gps.gprmc.direction, \</span><br><span class="line">                            &amp; gps.gprmc.utcDate.day, &amp; gps.gprmc.utcDate.mounth, &amp; gps.gprmc.utcDate.year, &amp; gps.gprmc.declination,     &amp;gps.gprmc.declin_ew, &amp; gps.gprmc.mode);</span><br><span class="line">            NRF_LOG_INFO(<span class="string">&quot;gps.gprmc.lat = %d, gps.gprmc.lon = %d\r\n&quot;</span>,gps.gprmc.lat,gps.gprmc.lon);</span><br><span class="line">            NRF_LOG_INFO(<span class="string">&quot;res = %d\r\n&quot;</span>,ret_sscanf);</span><br><span class="line">            <span class="keyword">if</span> (ret_sscanf &gt; <span class="number">8</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="literal">true</span>;</span><br><span class="line">                gps.report_data.gps_info.lat = (<span class="keyword">int</span>)(gps.gprmc.lat/<span class="number">100</span>) + (gps.gprmc.lat/<span class="number">100.0</span> - (<span class="keyword">int</span>)(gps.gprmc.lat/<span class="number">100</span>)) *<span class="number">100.0</span> / <span class="number">60.0</span>;<span class="comment">//转换成dd.ddddd</span></span><br><span class="line">                gps.report_data.gps_info.lon = (<span class="keyword">int</span>)(gps.gprmc.lon/<span class="number">100</span>) + (gps.gprmc.lon/<span class="number">100.0</span> - (<span class="keyword">int</span>)(gps.gprmc.lon/<span class="number">100</span>)) *<span class="number">100.0</span> / <span class="number">60.0</span>;<span class="comment">//转换成dd.ddddd</span></span><br><span class="line">                NRF_LOG_INFO(<span class="string">&quot;gps.report_data.lat = %d, gps.report_data.lon = %d\r\n&quot;</span>,gps.report_data.gps_info.lat,gps.report_data.gps_info.lon);</span><br><span class="line">                GPS_POWER_OFF;</span><br><span class="line">                gps_parse_count = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>GPS校验函数：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">hb：高位</span></span><br><span class="line"><span class="comment">lb：低位</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">AsciiToHexVal</span><span class="params">(<span class="keyword">uint8_t</span> h_b,<span class="keyword">uint8_t</span> l_b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">uint8_t</span> hex_val;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((h_b &gt;= <span class="string">&#x27;0&#x27;</span>)&amp;&amp;(h_b &lt;= <span class="string">&#x27;9&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">hex_val = h_b - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>((h_b &gt;= <span class="string">&#x27;A&#x27;</span>)&amp;&amp;(h_b &lt;= <span class="string">&#x27;F&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">hex_val = h_b - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>((h_b &gt;= <span class="string">&#x27;a&#x27;</span>)&amp;&amp;(h_b &lt;= <span class="string">&#x27;f&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">hex_val = h_b - <span class="string">&#x27;a&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hex_val &lt;&lt;= <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((l_b &gt;= <span class="string">&#x27;0&#x27;</span>)&amp;&amp;(l_b &lt;= <span class="string">&#x27;9&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">hex_val |= l_b - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>((l_b &gt;= <span class="string">&#x27;A&#x27;</span>)&amp;&amp;(l_b &lt;= <span class="string">&#x27;F&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">hex_val |= l_b - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>((l_b &gt;= <span class="string">&#x27;a&#x27;</span>)&amp;&amp;(l_b &lt;= <span class="string">&#x27;f&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">hex_val |= l_b - <span class="string">&#x27;a&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> hex_val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">GpsFrameCheck</span><span class="params">(<span class="keyword">char</span> *gps_data, <span class="keyword">uint8_t</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">uint8_t</span> i,res = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">uint8_t</span> gps_check = <span class="number">0</span>,cal_check =<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;len<span class="number">-3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">cal_check ^= gps_data[i];</span><br><span class="line">&#125;</span><br><span class="line">gps_check = AsciiToHexVal(gps_data[len<span class="number">-2</span>],gps_data[len<span class="number">-1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(gps_check == cal_check)</span><br><span class="line">&#123;</span><br><span class="line">NRF_LOG_INFO(<span class="string">&quot;gps_check == cal_check\r\n&quot;</span>,gps_check);</span><br><span class="line">res = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;GNRMC定位信息的读取与解析&quot;&gt;&lt;a href=&quot;#GNRMC定位信息的读取与解析&quot; class=&quot;headerlink&quot; title=&quot;GNRMC定位信息的读取与解析&quot;&gt;&lt;/a&gt;GNRMC定位信息的读取与解析&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;格 式：&lt;/stro</summary>
      
    
    
    
    <category term="C Lib" scheme="https://github.com/eagle230/nate.github.io/categories/C-Lib/"/>
    
    
    <category term="C Lib" scheme="https://github.com/eagle230/nate.github.io/tags/C-Lib/"/>
    
  </entry>
  
  <entry>
    <title>个人提升计划</title>
    <link href="https://github.com/eagle230/nate.github.io/2020/12/22/plan/"/>
    <id>https://github.com/eagle230/nate.github.io/2020/12/22/plan/</id>
    <published>2020-12-22T12:11:41.963Z</published>
    <updated>2020-12-28T11:34:21.951Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h1><h2 id="1-整理和编写开源代码库"><a href="#1-整理和编写开源代码库" class="headerlink" title="1.整理和编写开源代码库"></a>1.整理和编写开源代码库</h2><p>目标：方便以后开发移植，帮助自己深入理解实现原理和提高代码编程能力。</p><ul><li><input disabled="" type="checkbox"> ring buffer 【环形缓冲区】</li><li><input disabled="" type="checkbox"> AT指令【AT发送和解析框架】</li><li><input disabled="" type="checkbox"> GPS Parser【GPS解析库】</li><li><input disabled="" type="checkbox"> log通用打印【方便移植、可设置log等级、可类实现shell功能的通用库】</li><li><input disabled="" type="checkbox"> 裸机多任务系统【方便移植，基于链表】</li><li><input disabled="" type="checkbox"> BOOT+OTA框架【通用性强，方便移植，安全可靠】</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h1&gt;&lt;h2 id=&quot;1-整理和编写开源代码库&quot;&gt;&lt;a href=&quot;#1-整理和编写开源代码库&quot; class=&quot;headerlink&quot; title=&quot;1</summary>
      
    
    
    
    <category term="plan" scheme="https://github.com/eagle230/nate.github.io/categories/plan/"/>
    
    
    <category term="plan" scheme="https://github.com/eagle230/nate.github.io/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>Githuh Pages + Hexo 搭建个人博客</title>
    <link href="https://github.com/eagle230/nate.github.io/2020/12/22/Githuh%20Pages%20+%20Hexo/"/>
    <id>https://github.com/eagle230/nate.github.io/2020/12/22/Githuh%20Pages%20+%20Hexo/</id>
    <published>2020-12-22T12:11:41.962Z</published>
    <updated>2020-12-28T09:29:13.823Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Githuh-Pages-Hexo-搭建个人博客"><a href="#Githuh-Pages-Hexo-搭建个人博客" class="headerlink" title="Githuh Pages + Hexo 搭建个人博客"></a>Githuh Pages + Hexo 搭建个人博客</h1><h2 id="本地git配置"><a href="#本地git配置" class="headerlink" title="本地git配置"></a>本地git配置</h2><h3 id="配置本地git的用户信息"><a href="#配置本地git的用户信息" class="headerlink" title="配置本地git的用户信息"></a>配置本地git的用户信息</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Nate&quot;</span> </span><br><span class="line">git config --global user.email <span class="string">&quot;287770626@qq.com&quot;</span> </span><br></pre></td></tr></table></figure><h3 id="生成ssh密钥文件"><a href="#生成ssh密钥文件" class="headerlink" title="生成ssh密钥文件"></a>生成ssh密钥文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;287770626@qq.com&quot;</span></span><br></pre></td></tr></table></figure><p>期间会让你选择保存的目录，推荐使默认文件名，那么就会生成 id_rsa 和 id_rsa.pub 两个秘钥文件。<br>接着又会提示你输入两次密码（该密码是你push文件的时候要输入的密码，而不是github管理者的密码），当然，你也可以不输入密码，直接按回车。那么push的时候就不需要输入密码，直接提交到github上了。所以就是三个回车即可。</p><h3 id="配置github的ssh"><a href="#配置github的ssh" class="headerlink" title="配置github的ssh"></a>配置github的ssh</h3><p>找到本地用户里面的id_rsa.pub，打开并且在Github Seting里面设置好ssh。</p><h3 id="测试git与github关联情况"><a href="#测试git与github关联情况" class="headerlink" title="测试git与github关联情况"></a>测试git与github关联情况</h3><p>执行命令：ssh -T <a href="mailto:&#103;&#105;&#116;&#x40;&#103;&#105;&#x74;&#104;&#x75;&#98;&#x2e;&#99;&#111;&#x6d;">&#103;&#105;&#116;&#x40;&#103;&#105;&#x74;&#104;&#x75;&#98;&#x2e;&#99;&#111;&#x6d;</a></p><h2 id="创建github-pages-仓库"><a href="#创建github-pages-仓库" class="headerlink" title="创建github pages 仓库"></a>创建github pages 仓库</h2><p>创建一个github page仓库，名字格式必须为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username.github.io</span><br></pre></td></tr></table></figure><h2 id="克隆仓库到本地"><a href="#克隆仓库到本地" class="headerlink" title="克隆仓库到本地"></a>克隆仓库到本地</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:eagle230&#x2F;nate.github.io.git</span><br></pre></td></tr></table></figure><h2 id="安装Hexo和Nodejs"><a href="#安装Hexo和Nodejs" class="headerlink" title="安装Hexo和Nodejs"></a>安装Hexo和Nodejs</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>1、Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)<br>2、Git</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>1.新建个blog目录，在此处执行cmd，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-cli -g </span><br></pre></td></tr></table></figure><p>开始安装hexo<br>2.输入npm install安装必备的组件<br>3.hexo g 生成静态<br>4.hexo s 开启服务<br>5.打开<a href="http://localhost:4000/">http://localhost:4000</a><br>6.新建一篇博客，在cmd执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post “hello world”</span><br></pre></td></tr></table></figure><p>7.在生成以及部署文章之前，需要安装一个扩展：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>8.编辑根目录下_config.yml文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:linton6&#x2F;linton.github.io.git # 填写自己的仓库地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>9.加载博客样式文件 (搭建的时候遇到的坑)</p><p>需要修改_config.yml文件中的url地址和根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url：是github Page给我们分配的网址</span><br><span class="line">root：是搭建该博客的仓库名</span><br></pre></td></tr></table></figure><p>10.更改主题<br>github下载好主题XXX后放在themes目录下，然后编辑站点的_config.yml中的theme: XXX<br>11.更改网页图标（更改完整路径，遇到的坑）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:cofess&#x2F;hexo-theme-pure.git themes&#x2F;pure</span><br></pre></td></tr></table></figure><p>更改主题中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">favicon: https:&#x2F;&#x2F;eagle230.github.io&#x2F;nate.github.io&#x2F;favicon.png</span><br></pre></td></tr></table></figure><p>12.hexo g ，生成新的静态网页文件。<br>13.执行hexo d 上传到github上。<br>14.打开<a href="https://eagle230.github.io/nate.github.io/%E5%B0%B1%E7%9C%8B%E5%88%B0%E4%BA%86%E7%BD%91%E9%A1%B5%E3%80%82">https://eagle230.github.io/nate.github.io/就看到了网页。</a></p><h3 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h3><p>直接在port文件里面添加md格式的文件即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 个人能力提升计划</span><br><span class="line">categories:</span><br><span class="line">  - plan # 分类</span><br><span class="line">tags:</span><br><span class="line">  - plan # 标签</span><br><span class="line"># toc: true # 是否启用内容索引</span><br><span class="line">comments: true # 是否开启评论功能</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>参考链接：</p><p>[]: <a href="https://blog.csdn.net/linton1/article/details/90137367">https://blog.csdn.net/linton1/article/details/90137367</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Githuh-Pages-Hexo-搭建个人博客&quot;&gt;&lt;a href=&quot;#Githuh-Pages-Hexo-搭建个人博客&quot; class=&quot;headerlink&quot; title=&quot;Githuh Pages + Hexo 搭建个人博客&quot;&gt;&lt;/a&gt;Githuh Pages</summary>
      
    
    
    
    <category term="Hexo" scheme="https://github.com/eagle230/nate.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://github.com/eagle230/nate.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
